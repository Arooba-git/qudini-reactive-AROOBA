// Generated by delombok at Wed Feb 02 15:24:58 CET 2022
package com.qudini.reactive.security;

import org.springframework.http.HttpCookie;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ServerWebExchange;
import java.util.Optional;

@Service
public class CsrfService {
    @java.lang.SuppressWarnings("all")
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(CsrfService.class);
    private static final String COOKIE_NAME = "XSRF-TOKEN";
    private static final String HEADER_NAME = "X-Xsrf-Token";

    public boolean verify(ServerWebExchange exchange) {
        Optional<String> optionalHeaderValue = getHeaderValue(exchange);
        Optional<String> optionalCookieValue = getCookieValue(exchange);
        if (optionalHeaderValue.isPresent() && optionalHeaderValue.equals(optionalCookieValue)) {
            return true;
        } else {
            log.warn("CSRF verification failed, received header {}={} and cookie {}={}", HEADER_NAME, optionalHeaderValue, COOKIE_NAME, optionalCookieValue);
            return false;
        }
    }

    private Optional<String> getHeaderValue(ServerWebExchange exchange) {
        return Optional.ofNullable(exchange.getRequest().getHeaders().getFirst(HEADER_NAME));
    }

    private Optional<String> getCookieValue(ServerWebExchange exchange) {
        return Optional.ofNullable(exchange.getRequest().getCookies().getFirst(COOKIE_NAME)).map(HttpCookie::getValue);
    }
}
